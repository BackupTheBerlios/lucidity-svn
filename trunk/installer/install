#!/usr/bin/ruby -w
#
# Copyright (C) 2006 Eugen Minciu
#
# This file is part of Lucidity.
#
# Lucidity is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# Lucidity is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Lucidity; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

class Program
	attr_reader :protocol, :domain, :path, :file, :name, :dir
	def initialize(url_string,name,programType,verb)
		@url_string=url_string.dup
		@name=name
		@type=programType
		@verb=verb
		if url_string =~ /^http:\/\//
			@protocol='http'
			url_string=url_string.gsub(/^http:\/\//,'')
		elsif url_string =~ /^ftp:\/\//
			@protocol='ftp'
			url_string=url_string.gsub(/^http:\/\//,'')
		else @protocol='http'
		end 
		@url_array=url_string.split('/')
		@domain=@url_array[0]
		@file=@url_array[@url_array.length-1]
		@path=@url_array[1...@url_array.length-1]
	end
	def download
		@which_wget=`which wget`
		@which_curl=`which curl`	
		if File.exist?(@file)
			puts " * #{@name} has allready been downloaded. Skipping ..."
			return
		end
		print " * Fetching #{@name} "
		if (@which_wget.length>0)
			puts "(using wget) ..."
			if @verb
				system("wget #{@url_string}")
			else
				system("wget -q #{@url_string} >/dev/null")
			end
		elsif (@which_curl.length>0)
			puts "(using curl) ..."
			if @verb
				system("curl #{@url_string}")
			else
				system("curl #{@url_string} >/dev/null")
			end
		else 
			puts "(using internal libraries) ..."
		end
	end
	def extract
		@tarBasedFormat=false
		[/\.tar\.gz$/,/\.tgz$/,/\.tar.bz2$/,/\.tbz2$/].each do |regexp|
			if file =~ regexp
				@dir = file.gsub(regexp,'') 
				@tarBasedFormat=true
			end
		end
		if @tarBasedFormat
			if (file =~ /\.tar\.gz$/ or file =~ /\.tgz$/)
				@archive_type='z'
			elsif (file =~ /\.tar.bz2$/ or file =~ /\.tbz2$/)
				@archive_type='j'
			end

			if (@verb==true) 
				@verbose_option='v'
			else 	
				@verbose_option=''
			end

			puts " * Extracting #{name}"
			system("tar x#{@archive_type}#{@verbose_option}f #{@file}")
		end
	end
	def install
		if (@type=="ruby")
			if (@verb==true)
				system("ruby #{@dir}/setup.rb")
			else
				system("ruby #{@dir}/setup.rb >/dev/null 2>&1")
			end
		elsif (@type=="c")
			Dir.chdir(@dir)
			if (@verb==true)
				system("./configure && make && make install")
			else
				system("./configure && make && make install >/dev/null")
			end
			Dir.chdir("..")
		end
	end
	def patch(patchURL)
		@patchedDir=@dir
		@patch=Program.new(patchURL,"#{@name} patch","patch",@verb)
		@patch.download
		@patch.extract
		puts " * Patching #{name}"
		system("cp #{@patch.dir}/*diff #{@patchedDir}")
		Dir.chdir(@patchedDir)
		`ls *diff`.each { |d|
			d.chomp!
			if @verb
				system("patch -p0 < #{d}")
			else
				system("patch -p0 < #{d} >/dev/null")
			end
		}
		Dir.chdir("..")
	end
end


verb=false
rubygems=Program.new("rubyforge.org/frs/download.php/5207/rubygems-0.8.11.tgz","RubyGems","ruby",verb)
rubygems.download
rubygems.extract
rubygems.install
splitvt=Program.new("www.devolution.com/~slouken/projects/splitvt/splitvt-1.6.5.tar.gz","SplitVT","c",verb)
splitvt.download
splitvt.extract
splitvt.patch('download.berlios.de/lucidity/splitvt_patch-0.0.1.tar.bz2')
splitvt.install
